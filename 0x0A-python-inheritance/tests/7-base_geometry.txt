=============================
How to Use 7-base_geometry.py
=============================

This module defines an BaseGeometry class ``BaseGeometry``.

Using ``BaseGeometry``
=======================

Import function from module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Error Cases:
============

Test Case 1:

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Test Case 2:

    >>> bg.integer_validator("foo", 3.14)
    Traceback (most recent call last):
    TypeError: foo must be an integer

Test Case 3:

    >>> bg.integer_validator("Bar", "bar")
    Traceback (most recent call last):
    TypeError: Bar must be an integer

Test Case 4:

    >>> bg.integer_validator("hello", 0) 
    Traceback (most recent call last):
    ValueError: hello must be greater than 0

Test Case 5:

    >>> bg.integer_validator("world", -5)
    Traceback (most recent call last):
    ValueError: world must be greater than 0

Test Case 6:

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test Case 7:

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Test Case 8:

    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

Test Case 9:

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer

Test Case 10:

    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

